apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'application'

mainClassName = 'te.light_jockey.Startup'

repositories {
    mavenCentral()
    maven {
        // For groovy-wslite:2.0.0-SNAPSHOT
        url 'https://oss.sonatype.org/content/groups/public'
    }
}

dependencies {
    compile 'org.codehaus.groovy:groovy-all:2.4.4'
    compile 'com.github.groovy-wslite:groovy-wslite:2.0.0-SNAPSHOT'

    // Hue SDK files (These don't exist in Maven Central)
    compile fileTree(dir: 'libs', include: '*.jar')
    compile fileTree(dir: 'docs', include: '*.*')

    // Logging
    compile 'org.slf4j:slf4j-api:1.7.12'
    compile 'ch.qos.logback:logback-classic:1.1.3'

    // Misc.
    compile 'com.google.guava:guava:18.0'
    compile 'commons-io:commons-io:2.4'
    compile 'org.apache.commons:commons-lang3:3.4'

    // Spock
    testCompile 'cglib:cglib-nodep:3.2.0'
    testCompile 'org.objenesis:objenesis:2.2'
    testCompile 'org.spockframework:spock-core:1.0-groovy-2.4'

}

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

task executableJar(type: Jar, dependsOn:[':compileGroovy', ':processResources']) {
    description 'Copies all classes, resources, and jar dependencies into one executable jar'
    from 'gradle.properties'                            // Include the gradle.properties files
    from fileTree(dir: 'libs', include: '*.jar')        // Include HUE SDK
    from files(sourceSets.main.output.classesDir)       // Include all compiled class files
    from files(sourceSets.main.output.resourcesDir)     // Include all resources
    from configurations.runtime.asFileTree.files.collect { zipTree(it) }
    archiveName "LightJockey-v${version}.jar"

    manifest {
        attributes 'Main-Class': mainClassName
    }
}